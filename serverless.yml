# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: alexa_attendance

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python2.7

# you can overwrite defaults here
  stage: dev
  region: ap-northeast-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
        - "dax:*"
        - "application-autoscaling:DeleteScalingPolicy"
        - "application-autoscaling:DeregisterScalableTarget"
        - "application-autoscaling:DescribeScalableTargets"
        - "application-autoscaling:DescribeScalingActivities"
        - "application-autoscaling:DescribeScalingPolicies"
        - "application-autoscaling:PutScalingPolicy"
        - "application-autoscaling:RegisterScalableTarget"
        - "cloudwatch:DeleteAlarms"
        - "cloudwatch:DescribeAlarmHistory"
        - "cloudwatch:DescribeAlarms"
        - "cloudwatch:DescribeAlarmsForMetric"
        - "cloudwatch:GetMetricStatistics"
        - "cloudwatch:ListMetrics"
        - "cloudwatch:PutMetricAlarm"
        - "datapipeline:ActivatePipeline"
        - "datapipeline:CreatePipeline"
        - "datapipeline:DeletePipeline"
        - "datapipeline:DescribeObjects"
        - "datapipeline:DescribePipelines"
        - "datapipeline:GetPipelineDefinition"
        - "datapipeline:ListPipelines"
        - "datapipeline:PutPipelineDefinition"
        - "datapipeline:QueryObjects"
        - "ec2:DescribeVpcs"
        - "ec2:DescribeSubnets"
        - "ec2:DescribeSecurityGroups"
        - "iam:GetRole"
        - "iam:ListRoles"
        - "sns:CreateTopic"
        - "sns:DeleteTopic"
        - "sns:ListSubscriptions"
        - "sns:ListSubscriptionsByTopic"
        - "sns:ListTopics"
        - "sns:Subscribe"
        - "sns:Unsubscribe"
        - "sns:SetTopicAttributes"
        - "lambda:CreateFunction"
        - "lambda:ListFunctions"
        - "lambda:ListEventSourceMappings"
        - "lambda:CreateEventSourceMapping"
        - "lambda:DeleteEventSourceMapping"
        - "lambda:GetFunctionConfiguration"
        - "lambda:DeleteFunction"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "arn:aws:logs:*:*:*"

# you can define service wide environment variables here
  environment:
    TZ: Asia/Tokyo
    WEBEX_ROOM_ID: <YOUR_ROOM_ID>
    WEBEX_ACCESS_TOKEN: <YOUR_ACCESS_TOKEN>

functions:
  alexxa_attendance:
    handler: alexa_attendance.lambda_handler

    events:
      - alexaSkill: <YOUR_ALEXA_SKILL_ID>
